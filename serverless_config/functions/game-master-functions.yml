createLobby:
  handler: handlers.game_master_handlers.create_lobby_handler
  events:
    - http:
        path: /game-master/lobby
        method: post
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Creates a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          requestBody:
            description: "JSON containing lobby name"
          requestModels:
            "application/json": GameMasterLobbyRequest
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]

getLobby:
  handler: handlers.game_master_handlers.get_lobby_handler
  events:
    - http:
        path: /game-master/lobby
        method: get
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Gets information about a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          requestBody:
            description: "None"
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "JSON containing information about the requested lobby"
              responseModels:
                "application/json": GetLobbyAsGameMasterResponse
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]

deleteLobby:
  handler: handlers.game_master_handlers.delete_lobby_handler
  events:
    - http:
        path: /game-master/lobby/{lobby}
        request:
          parameters:
            paths:
              lobby: true
        method: delete
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Deletes a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]

addSquadToLobby:
  handler: handlers.game_master_handlers.add_squad_to_lobby_handler
  events:
    - http:
        path: /game-master/lobby/{lobby}/squads/{squadname}
        request:
          parameters:
            paths:
              lobby: true
              squadname: true
        method: post
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Adds a squad to a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          requestBody:
            description: "None"
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]

removeSquadFromLobby:
  handler: handlers.game_master_handlers.remove_squad_from_lobby_handler
  events:
    - http:
        path: /game-master/lobby/{lobby}/squads/{squadname}
        request:
          parameters:
            paths:
              lobby: true
              squadname: true
        method: delete
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Removes a squad from a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          requestBody:
            description: "None"
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]

getPlayersInLobby:
  handler: handlers.game_master_handlers.get_players_in_lobby_handler
  events:
    - http:
        path: /game-master/lobby/{lobby}/players
        request:
          parameters:
            paths:
              lobby: true
        method: get
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Gets a list of players in a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          requestBody:
            description: "None"
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "List of Players in the lobby and their information"
              responseModels:
                "application/json": GetPlayersInLobbyResponse
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]

updateLobby:
  handler: handlers.game_master_handlers.update_lobby_handler
  events:
    - http:
        path: /game-master/lobby/{lobby}/settings
        request:
          parameters:
            paths:
              lobby: true
        method: post
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Update settings of a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          requestBody:
            description: "JSON containing fields update"
          requestModels:
            "application/json": LobbySettingsRequest
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]

startLobby:
  handler: handlers.game_master_handlers.start_lobby_handler
  events:
    - http:
        path: /game-master/lobby/{lobby}/start
        request:
          parameters:
            paths:
              lobby: true
        method: post
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Start a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]
    SQS_URL:
      Ref: CircleQueue

endLobby:
  handler: handlers.game_master_handlers.start_lobby_handler
  events:
    - http:
        path: /game-master/lobby/{lobby}/end
        request:
          parameters:
            paths:
              lobby: true
        method: post
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "End a lobby owned by calling user"
          tags:
            - "Game Master Endpoints"
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.GameMasterException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
    TABLE:
      Fn::GetAtt: [BattleRoyaleTable, Arn]
