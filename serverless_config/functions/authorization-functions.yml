signUp:
    handler: handlers.authorization_handlers.sign_up_handler
    events:
      - http:
          path: /user_management/sign_up
          method: post
          documentation:
            summary: "Sign up a new User"
            tags:
              - "Authorization"
            requestBody:
              description: "JSON containing Username, Password and Email. Email is not used for anything"
            requestModels:
              "application/json": SignUpRequest
            methodResponses:
              - statusCode: "200"
                responseBody:
                  description: "None"
              - ${self:custom.commonModelSchemaFragments.AuthorizationException}
    environment:
      USER_POOL_CLIENT_ID:
        Ref: CognitoUserPoolClient
      USER_POOL_ID:
        Ref: CognitoUserPool
      TABLE:
        Fn::GetAtt: [BattleRoyaleTable, Arn]

signIn:
  handler: handlers.authorization_handlers.sign_in_handler
  events:
    - http:
        path: /user_management/sign_in
        method: post
        documentation:
          summary: "Sign in a User"
          tags:
            - "Authorization"
          requestBody:
            description: "JSON containing Username and Password"
          requestModels:
            "application/json": SignInRequest
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "Contains tokens used for using the rest of the API"
              responseModels:
                "application/json": AuthorizationResponse
            - ${self:custom.commonModelSchemaFragments.AuthorizationException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool

signOut:
  handler: handlers.authorization_handlers.sign_out_handler
  events:
    - http:
        path: /user_management/sign_out
        method: post
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        documentation:
          summary: "Sign out a User"
          tags:
            - "Authorization"
          requestBody:
            description: "JSON containing Access token"
          requestModels:
            "application/json": SignOutRequest
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
            - ${self:custom.commonModelSchemaFragments.AuthorizationException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool

refreshTokens:
  handler: handlers.authorization_handlers.refresh_tokens_handler
  events:
    - http:
        path: /user_management/refresh
        method: post
        documentation:
          summary: "Refreshes a User's tokens"
          tags:
            - "Authorization"
          requestBody:
            description: "JSON containing Refresh token"
          requestModels:
            "application/json": RefreshTokensRequest
          methodResponses:
            - statusCode: "200"
              responseBody:
                description: "None"
              responseModels:
                "application/json": AuthorizationResponse
            - ${self:custom.commonModelSchemaFragments.AuthorizationException}
  environment:
    USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient
    USER_POOL_ID:
      Ref: CognitoUserPool
